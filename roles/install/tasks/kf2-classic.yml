---
- name: Install .NET Runtime
  package:
    name: "dotnet-runtime-{{ dotnet_version }}"
    state: latest
  when: ansible_os_family == 'RedHat'

- include_role:
    name: bviktor.thirdparty
  vars:
    name: '.NET Runtime'
    gpg_url: 'https://packages.microsoft.com/keys/microsoft.asc'
    repo_file: 'microsoft-prod'
    package: "dotnet-runtime-{{ dotnet_version }}"
  when: ansible_os_family == 'Debian'

- include_role:
    name: bviktor.github_release
  vars:
    owner: 'SteamRE'
    repo: 'DepotDownloader'
    prefix: 'depotdownloader-'
    suffix: '.zip'

# the zip file needs to be versioned, otherwise version bumps won't trigger a re-download
# we could checksum it to avoid that, but that's more effort and maintenance
- name: Obtain DepotDownloader
  get_url:
    url: "{{ github_release.url }}"
    dest: "{{ steam_home }}/{{ github_release.url.split('/') | last }}"
    owner: steam
    group: steam
    mode: '0644'
  register: dd_dl

- name: Remove old DepotDownloader # noqa no-handler
  file:
    path: "{{ steam_home }}/depotdownloader"
    state: absent
  when: dd_dl.changed

- name: Create DepotDownloader directory
  file:
    path: "{{ steam_home }}/depotdownloader"
    state: directory
    owner: steam
    group: steam
    mode: '0755'

- name: Extract DepotDownloader # noqa no-handler
  become_user: steam
  unarchive:
    src: "{{ steam_home }}/{{ github_release.url.split('/') | last }}"
    dest: "{{ steam_home }}/depotdownloader"
    remote_src: true
  when: dd_dl.changed

# don't use the wrapper as it lacks the shebang so ansible errors out with an exec format error
- name: Install Killing Floor 2 Classic (be patient, 16 GB+)
  command:
    cmd: "dotnet {{ steam_home }}/depotdownloader/DepotDownloader.dll -app 232130 -depot 232131 -manifest 2346945547354693824 -validate -os linux -max-downloads 16 -dir {{ steam_home }}/Steam/KF2Server"
  no_log: true
  become_user: steam
  register: kf2_install
  changed_when: '"Total downloaded: 0 bytes (0 bytes uncompressed) from 1 depots" not in kf2_install.stdout'
  when: not skip_kfgame|bool

- name: Make symlinks for the Workshop and Cache folders
  file:
    src: "{{ item.target }}"
    dest: "{{ item.link }}"
    state: link
    force: true
    follow: false
    owner: steam
    group: steam
  loop:
    - { target: '{{ steam_home }}/Steam/KF2Server/KFGame/Cache', link: '{{ steam_home }}/Cache' }
    - { target: '{{ steam_home }}/Steam/KF2Server/Binaries/Win64/steamapps/workshop', link: '{{ steam_home }}/Workshop' }
